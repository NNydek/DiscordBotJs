import { IterationEvent, MapIterationEvent, MatchIterationEvent } from './events';
import { SortOptions } from './config';
export declare function each(target: any, handler: (value: any, key: string | number, event: IterationEvent) => void, event?: IterationEvent): void;
export declare function filter(target: any, handler: (value: any, key: string | number, event: IterationEvent) => boolean, event?: IterationEvent): any;
export declare function map(target: any, handler: (value: any, key: string | number, event: MapIterationEvent) => any, event?: MapIterationEvent): any;
export declare function index<K, V>(target: any, key: (value: any, key: string | number) => K, value: (value: any, key: string | number) => V): Map<K, V>;
export declare function sort<T>(target: Array<T>, options: Array<SortOptions> | SortOptions): Array<T>;
export declare function find(target: any, handler: (value: any, key: string | number, event: IterationEvent) => boolean, event?: IterationEvent): any;
export declare function indexOf(target: any, obj: any): any;
export declare function contains(target: any, handler: (value: any, key: string | number, event: IterationEvent) => boolean, event?: IterationEvent): boolean;
export declare function fuse(target: any, source: any, event?: IterationEvent): any;
export declare function distinct<T>(target: Array<T>, handler: (value: any, key: string | number, event: IterationEvent) => any, event?: IterationEvent): Array<T>;
export declare function group<K>(target: any, key: (value: any, key: string | number, event: IterationEvent) => K, event: IterationEvent): Map<K, Array<any>>;
export declare function first(target: any): any;
export declare function last(target: any): any;
export declare function any(target: any, handler: (value: any, key: string | number, event: IterationEvent) => boolean, event?: IterationEvent): boolean;
export declare function all(target: any, handler: (value: any, key: string | number, event: IterationEvent) => boolean, event?: IterationEvent): boolean;
export declare function match(target1: any, target2: any, event?: MatchIterationEvent): boolean;
export declare function copy(target: any): any;
export declare function clone(target: any): any;
